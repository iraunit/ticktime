# Generated by Django 4.2.16 on 2025-07-25 22:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/')),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('industry', models.CharField(choices=[('fashion_beauty', 'Fashion & Beauty'), ('food_lifestyle', 'Food & Lifestyle'), ('tech_gaming', 'Tech & Gaming'), ('fitness_health', 'Fitness & Health'), ('travel', 'Travel'), ('entertainment', 'Entertainment'), ('education', 'Education'), ('business_finance', 'Business & Finance'), ('other', 'Other')], max_length=50)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_campaigns', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('objectives', models.TextField(blank=True)),
                ('deal_type', models.CharField(choices=[('paid', 'Paid'), ('barter', 'Barter'), ('hybrid', 'Hybrid')], max_length=20)),
                ('cash_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('product_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('product_name', models.CharField(blank=True, max_length=200)),
                ('product_description', models.TextField(blank=True)),
                ('product_images', models.JSONField(blank=True, default=list)),
                ('product_quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('available_sizes', models.JSONField(blank=True, default=list)),
                ('available_colors', models.JSONField(blank=True, default=list)),
                ('content_requirements', models.JSONField(blank=True, default=dict)),
                ('platforms_required', models.JSONField(blank=True, default=list)),
                ('content_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('special_instructions', models.TextField(blank=True)),
                ('application_deadline', models.DateTimeField()),
                ('product_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('content_creation_start', models.DateTimeField(blank=True, null=True)),
                ('content_creation_end', models.DateTimeField(blank=True, null=True)),
                ('submission_deadline', models.DateTimeField()),
                ('campaign_start_date', models.DateTimeField()),
                ('campaign_end_date', models.DateTimeField()),
                ('payment_schedule', models.TextField(blank=True)),
                ('shipping_details', models.TextField(blank=True)),
                ('custom_terms', models.TextField(blank=True)),
                ('allows_negotiation', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='core.brand')),
            ],
            options={
                'db_table': 'campaigns',
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'conversations',
            },
        ),
        migrations.CreateModel(
            name='InfluencerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('industry', models.CharField(choices=[('fashion_beauty', 'Fashion & Beauty'), ('food_lifestyle', 'Food & Lifestyle'), ('tech_gaming', 'Tech & Gaming'), ('fitness_health', 'Fitness & Health'), ('travel', 'Travel'), ('entertainment', 'Entertainment'), ('education', 'Education'), ('business_finance', 'Business & Finance'), ('other', 'Other')], max_length=50)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('address', models.TextField(blank=True)),
                ('aadhar_number', models.CharField(blank=True, max_length=12)),
                ('aadhar_document', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('is_verified', models.BooleanField(default=False)),
                ('bank_account_number', models.CharField(blank=True, max_length=20)),
                ('bank_ifsc_code', models.CharField(blank=True, max_length=11)),
                ('bank_account_holder_name', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='influencer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'influencer_profiles',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('linkedin', 'LinkedIn'), ('snapchat', 'Snapchat'), ('pinterest', 'Pinterest')], max_length=20)),
                ('handle', models.CharField(max_length=100)),
                ('profile_url', models.URLField(blank=True)),
                ('followers_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('following_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('posts_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('engagement_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('average_likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_comments', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_shares', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to='core.influencerprofile')),
            ],
            options={
                'db_table': 'social_media_accounts',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_type', models.CharField(choices=[('influencer', 'Influencer'), ('brand', 'Brand')], max_length=20)),
                ('content', models.TextField()),
                ('file_attachment', models.FileField(blank=True, null=True, upload_to='message_attachments/')),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('read_by_influencer', models.BooleanField(default=False)),
                ('read_by_brand', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.conversation')),
                ('sender_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('invited', 'Invited'), ('pending', 'Pending'), ('accepted', 'Accepted'), ('active', 'Active'), ('content_submitted', 'Content Submitted'), ('under_review', 'Under Review'), ('revision_requested', 'Revision Requested'), ('approved', 'Approved'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('dispute', 'Dispute')], default='invited', max_length=20)),
                ('rejection_reason', models.TextField(blank=True)),
                ('negotiation_notes', models.TextField(blank=True)),
                ('custom_terms_agreed', models.TextField(blank=True)),
                ('invited_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('brand_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('brand_review', models.TextField(blank=True)),
                ('influencer_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('influencer_review', models.TextField(blank=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deals', to='core.campaign')),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deals', to='core.influencerprofile')),
            ],
            options={
                'db_table': 'deals',
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='deal',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conversation', to='core.deal'),
        ),
        migrations.CreateModel(
            name='ContentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('linkedin', 'LinkedIn'), ('snapchat', 'Snapchat'), ('pinterest', 'Pinterest')], max_length=20)),
                ('content_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('story', 'Story'), ('reel', 'Reel'), ('post', 'Post')], max_length=20)),
                ('file_url', models.URLField(blank=True)),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='content_submissions/')),
                ('caption', models.TextField(blank=True)),
                ('hashtags', models.TextField(blank=True)),
                ('mention_brand', models.BooleanField(default=True)),
                ('post_url', models.URLField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('revision_requested', models.BooleanField(default=False)),
                ('revision_notes', models.TextField(blank=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_submissions', to='core.deal')),
            ],
            options={
                'db_table': 'content_submissions',
            },
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['name'], name='brands_name_c58671_idx'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['industry'], name='brands_industr_2b91ff_idx'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['is_verified'], name='brands_is_veri_672e73_idx'),
        ),
        migrations.AddIndex(
            model_name='brand',
            index=models.Index(fields=['rating'], name='brands_rating_ed3c8c_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmediaaccount',
            index=models.Index(fields=['platform'], name='social_medi_platfor_673f7d_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmediaaccount',
            index=models.Index(fields=['followers_count'], name='social_medi_followe_025482_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmediaaccount',
            index=models.Index(fields=['engagement_rate'], name='social_medi_engagem_5c67a3_idx'),
        ),
        migrations.AddIndex(
            model_name='socialmediaaccount',
            index=models.Index(fields=['is_active'], name='social_medi_is_acti_490de0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialmediaaccount',
            unique_together={('influencer', 'platform', 'handle')},
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation'], name='messages_convers_8904b4_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender_type'], name='messages_sender__1fa575_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at'], name='messages_created_919c58_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['read_by_influencer'], name='messages_read_by_20b8b5_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['read_by_brand'], name='messages_read_by_820942_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['username'], name='influencer__usernam_7babe3_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['industry'], name='influencer__industr_eadff7_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['is_verified'], name='influencer__is_veri_bb7c21_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['created_at'], name='influencer__created_ea7231_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['status'], name='deals_status_eeb583_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['payment_status'], name='deals_payment_3dc664_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['invited_at'], name='deals_invited_0de380_idx'),
        ),
        migrations.AddIndex(
            model_name='deal',
            index=models.Index(fields=['completed_at'], name='deals_complet_63ee5f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='deal',
            unique_together={('campaign', 'influencer')},
        ),
        migrations.AddIndex(
            model_name='contentsubmission',
            index=models.Index(fields=['deal'], name='content_sub_deal_id_b79430_idx'),
        ),
        migrations.AddIndex(
            model_name='contentsubmission',
            index=models.Index(fields=['platform'], name='content_sub_platfor_d73e23_idx'),
        ),
        migrations.AddIndex(
            model_name='contentsubmission',
            index=models.Index(fields=['content_type'], name='content_sub_content_609e9c_idx'),
        ),
        migrations.AddIndex(
            model_name='contentsubmission',
            index=models.Index(fields=['submitted_at'], name='content_sub_submitt_441e0f_idx'),
        ),
        migrations.AddIndex(
            model_name='contentsubmission',
            index=models.Index(fields=['approved'], name='content_sub_approve_ab5a6a_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['brand'], name='campaigns_brand_i_c2d4bd_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['deal_type'], name='campaigns_deal_ty_a41164_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['application_deadline'], name='campaigns_applica_b78630_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['campaign_start_date'], name='campaigns_campaig_ae7bbc_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['is_active'], name='campaigns_is_acti_6c57d0_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['created_at'], name='campaigns_created_9201e5_idx'),
        ),
    ]
