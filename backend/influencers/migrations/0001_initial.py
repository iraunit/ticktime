# Generated by Django 4.2.16 on 2025-09-03 21:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InfluencerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('industry', models.CharField(choices=[('fashion_beauty', 'Fashion & Beauty'), ('food_lifestyle', 'Food & Lifestyle'), ('tech_gaming', 'Tech & Gaming'), ('fitness_health', 'Fitness & Health'), ('travel', 'Travel'), ('entertainment', 'Entertainment'), ('education', 'Education'), ('business_finance', 'Business & Finance'), ('other', 'Other')], max_length=50)),
                ('bio', models.TextField(blank=True, default='')),
                ('aadhar_number', models.CharField(blank=True, default='', max_length=12)),
                ('aadhar_document', models.FileField(blank=True, null=True, upload_to='documents/')),
                ('is_verified', models.BooleanField(default=False)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('state', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('pincode', models.CharField(blank=True, default='', max_length=10)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], default='', max_length=20)),
                ('age_range', models.CharField(blank=True, choices=[('18-24', '18-24'), ('25-34', '25-34'), ('35-44', '35-44'), ('45-54', '45-54'), ('55+', '55+')], default='', max_length=20)),
                ('influence_score', models.DecimalField(blank=True, decimal_places=2, help_text='Influencer influence score (0-10)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('platform_score', models.DecimalField(blank=True, decimal_places=2, help_text='Overall platform performance score (0-10)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('average_interaction', models.CharField(blank=True, help_text='Average interactions per post (e.g., "1.7k")', max_length=20)),
                ('average_views', models.CharField(blank=True, help_text='Average views per post (e.g., "181.3k")', max_length=20)),
                ('average_dislikes', models.CharField(blank=True, help_text='Average dislikes per post', max_length=20)),
                ('available_platforms', models.JSONField(blank=True, default=list, help_text='List of platforms where influencer is active', null=True)),
                ('response_time', models.CharField(blank=True, default='', max_length=50)),
                ('faster_responses', models.BooleanField(default=False)),
                ('contact_availability', models.CharField(choices=[('available', 'Available'), ('busy', 'Busy'), ('unavailable', 'Unavailable')], default='available', max_length=50)),
                ('commerce_ready', models.BooleanField(default=False, help_text='Ready for commerce campaigns')),
                ('campaign_ready', models.BooleanField(default=False, help_text='Ready for general campaigns')),
                ('barter_ready', models.BooleanField(default=False, help_text='Ready for barter campaigns')),
                ('bank_account_number', models.CharField(blank=True, default='', max_length=20)),
                ('bank_ifsc_code', models.CharField(blank=True, default='', max_length=11)),
                ('bank_account_holder_name', models.CharField(blank=True, default='', max_length=100)),
                ('avg_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('collaboration_count', models.IntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('content_keywords', models.JSONField(blank=True, default=list, help_text='Keywords found in captions and content', null=True)),
                ('bio_keywords', models.JSONField(blank=True, default=list, help_text='Keywords found in bio', null=True)),
                ('has_instagram', models.BooleanField(default=False)),
                ('has_youtube', models.BooleanField(default=False)),
                ('has_tiktok', models.BooleanField(default=False)),
                ('has_twitter', models.BooleanField(default=False)),
                ('has_facebook', models.BooleanField(default=False)),
                ('has_linkedin', models.BooleanField(default=False)),
                ('instagram_verified', models.BooleanField(default=False)),
                ('brand_safety_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('content_quality_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('audience_gender_distribution', models.JSONField(blank=True, default=dict, help_text='Audience gender distribution', null=True)),
                ('audience_age_distribution', models.JSONField(blank=True, default=dict, help_text='Audience age distribution', null=True)),
                ('audience_locations', models.JSONField(blank=True, default=list, help_text='Top audience locations', null=True)),
                ('audience_interests', models.JSONField(blank=True, default=list, help_text='Audience interests', null=True)),
                ('audience_languages', models.JSONField(blank=True, default=list, help_text='Audience languages', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='influencers', to='common.industry')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='influencer_profile', to=settings.AUTH_USER_MODEL)),
                ('user_profile', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='influencer_profile', to='users.userprofile')),
            ],
            options={
                'db_table': 'influencer_profiles',
            },
        ),
        migrations.CreateModel(
            name='InfluencerCategoryScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('score', models.DecimalField(decimal_places=2, help_text='Category relevance score (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_flag', models.BooleanField(default=False, help_text='Flagged category for special attention')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary category for the influencer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_scores', to='influencers.influencerprofile')),
            ],
            options={
                'db_table': 'influencer_category_scores',
            },
        ),
        migrations.CreateModel(
            name='InfluencerAudienceInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('linkedin', 'LinkedIn'), ('snapchat', 'Snapchat'), ('pinterest', 'Pinterest')], max_length=20)),
                ('male_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('female_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('other_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('age_18_24_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('age_25_34_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('age_35_44_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('age_45_54_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('age_55_plus_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('top_locations', models.JSONField(default=list)),
                ('top_interests', models.JSONField(default=list)),
                ('languages', models.JSONField(default=list)),
                ('active_followers_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('fake_followers_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audience_insights', to='influencers.influencerprofile')),
            ],
            options={
                'db_table': 'influencer_audience_insights',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('instagram', 'Instagram'), ('youtube', 'YouTube'), ('tiktok', 'TikTok'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('linkedin', 'LinkedIn'), ('snapchat', 'Snapchat'), ('pinterest', 'Pinterest')], max_length=20)),
                ('handle', models.CharField(max_length=100)),
                ('profile_url', models.URLField(blank=True)),
                ('followers_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('following_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('posts_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('engagement_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('average_likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_comments', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_shares', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('platform_handle', models.CharField(blank=True, help_text='Platform-specific handle (e.g., @username)', max_length=100)),
                ('platform_profile_link', models.URLField(blank=True, help_text='Direct link to platform profile')),
                ('average_image_likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_image_comments', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_reel_plays', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_reel_likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_reel_comments', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_video_views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_shorts_plays', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_shorts_likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('average_shorts_comments', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('subscribers_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('page_likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('page_followers', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('twitter_followers', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('twitter_following', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tweets_count', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tiktok_followers', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tiktok_following', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tiktok_likes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('tiktok_videos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('follower_growth_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly follower growth rate (%)', max_digits=5, null=True)),
                ('subscriber_growth_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly subscriber growth rate (%)', max_digits=5, null=True)),
                ('last_posted_at', models.DateTimeField(blank=True, null=True)),
                ('post_performance_score', models.DecimalField(blank=True, decimal_places=2, help_text='Overall post performance score (0-10)', max_digits=3, null=True)),
                ('avg_cpm', models.DecimalField(blank=True, decimal_places=2, help_text='Average cost per mille (CPM)', max_digits=8, null=True)),
                ('verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to='influencers.influencerprofile')),
            ],
            options={
                'db_table': 'social_media_accounts',
                'indexes': [models.Index(fields=['influencer', 'platform'], name='social_medi_influen_b3b329_idx'), models.Index(fields=['platform', 'is_active'], name='social_medi_platfor_16a5c6_idx'), models.Index(fields=['followers_count'], name='social_medi_followe_025482_idx'), models.Index(fields=['engagement_rate'], name='social_medi_engagem_5c67a3_idx'), models.Index(fields=['verified'], name='social_medi_verifie_990a89_idx'), models.Index(fields=['last_posted_at'], name='social_medi_last_po_4f6e94_idx')],
                'unique_together': {('influencer', 'platform', 'handle')},
            },
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['username'], name='influencer__usernam_7babe3_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['industry'], name='influencer__industr_eadff7_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['is_verified'], name='influencer__is_veri_bb7c21_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['country'], name='influencer__country_13d506_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['state'], name='influencer__state_261f49_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['city'], name='influencer__city_d57ce1_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['gender'], name='influencer__gender_61285c_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['influence_score'], name='influencer__influen_7f055c_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['commerce_ready'], name='influencer__commerc_dd23db_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['campaign_ready'], name='influencer__campaig_783856_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['barter_ready'], name='influencer__barter__fb4dbd_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['faster_responses'], name='influencer__faster__e64861_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['instagram_verified'], name='influencer__instagr_541266_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['has_instagram'], name='influencer__has_ins_0f4dd2_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['has_youtube'], name='influencer__has_you_7b80bd_idx'),
        ),
        migrations.AddIndex(
            model_name='influencerprofile',
            index=models.Index(fields=['has_tiktok'], name='influencer__has_tik_dd7210_idx'),
        ),
        migrations.AddIndex(
            model_name='influencercategoryscore',
            index=models.Index(fields=['category_name'], name='influencer__categor_47b626_idx'),
        ),
        migrations.AddIndex(
            model_name='influencercategoryscore',
            index=models.Index(fields=['score'], name='influencer__score_900988_idx'),
        ),
        migrations.AddIndex(
            model_name='influencercategoryscore',
            index=models.Index(fields=['is_primary'], name='influencer__is_prim_991d79_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='influencercategoryscore',
            unique_together={('influencer', 'category_name')},
        ),
        migrations.AlterUniqueTogether(
            name='influenceraudienceinsight',
            unique_together={('influencer', 'platform')},
        ),
    ]
