# Generated by Django 4.2.16 on 2025-08-21 23:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('influencers', '0005_influenceraudienceinsight_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='influencerprofile',
            name='available_platforms',
            field=models.JSONField(blank=True, default=list, help_text='List of platforms where influencer is active', null=True),
        ),
        migrations.AddField(
            model_name='influencerprofile',
            name='average_dislikes',
            field=models.CharField(blank=True, help_text='Average dislikes per post', max_length=20),
        ),
        migrations.AddField(
            model_name='influencerprofile',
            name='average_interaction',
            field=models.CharField(blank=True, help_text='Average interactions per post (e.g., "1.7k")', max_length=20),
        ),
        migrations.AddField(
            model_name='influencerprofile',
            name='average_views',
            field=models.CharField(blank=True, help_text='Average views per post (e.g., "181.3k")', max_length=20),
        ),
        migrations.AddField(
            model_name='influencerprofile',
            name='platform_score',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Overall platform performance score (0-10)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='page_followers',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='page_likes',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='platform_handle',
            field=models.CharField(blank=True, help_text='Platform-specific handle (e.g., @username)', max_length=100),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='platform_profile_link',
            field=models.URLField(blank=True, help_text='Direct link to platform profile'),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='tiktok_followers',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='tiktok_following',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='tiktok_likes',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='tiktok_videos',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='tweets_count',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='twitter_followers',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='socialmediaaccount',
            name='twitter_following',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.CreateModel(
            name='InfluencerCategoryScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
                ('score', models.DecimalField(decimal_places=2, help_text='Category relevance score (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_flag', models.BooleanField(default=False, help_text='Flagged category for special attention')),
                ('is_primary', models.BooleanField(default=False, help_text='Primary category for the influencer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('influencer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_scores', to='influencers.influencerprofile')),
            ],
            options={
                'db_table': 'influencer_category_scores',
                'indexes': [models.Index(fields=['category_name'], name='influencer__categor_47b626_idx'), models.Index(fields=['score'], name='influencer__score_900988_idx'), models.Index(fields=['is_primary'], name='influencer__is_prim_991d79_idx')],
                'unique_together': {('influencer', 'category_name')},
            },
        ),
    ]
